Terminals unused in grammar

   OPEN
   CLOSE
   WHILE
   FOR
   CASE
   COMMENT
   QUOTE


Grammar

    0 $accept: calculation $end

    1 calculation: /* empty */
    2            | calculation line

    3 line: NEWLINE
    4     | OPERATION NEWLINE
    5     | BOOLEAN_VAR NEWLINE
    6     | BOOLEAN_OP NEWLINE
    7     | BOOLEAN_MIX NEWLINE
    8     | DECL NEWLINE
    9     | QUIT NEWLINE

   10 DECL: VAR_NAME COLON INTEGERDEC SEMICOLON
   11     | VAR_NAME COLON STRINGDEC SEMICOLON
   12     | VAR_NAME COLON FLOATDEC SEMICOLON
   13     | VAR_NAME COLON CHARDEC SEMICOLON
   14     | VAR_NAME COLON INTEGERDEC COLON EQUAL OPERATION SEMICOLON
   15     | VAR_NAME COLON EQUAL OPERATION SEMICOLON
   16     | VAR_NAME COLON STRINGDEC COLON EQUAL STR SEMICOLON
   17     | VAR_NAME COLON EQUAL STR SEMICOLON
   18     | VAR_NAME COLON FLOATDEC COLON EQUAL OPERATION SEMICOLON
   19     | VAR_NAME COLON CHARDEC COLON EQUAL CHAR SEMICOLON
   20     | VAR_NAME COLON EQUAL CHAR SEMICOLON

   21 OPERATION: INT
   22          | FLOAT
   23          | OPERATION PLUS OPERATION
   24          | OPERATION MINUS OPERATION
   25          | OPERATION MULTIPLY OPERATION
   26          | OPERATION DIVIDE OPERATION
   27          | LEFT OPERATION RIGHT

   28 BOOLEAN_VAR: BOOL VAR_NAME EQUAL TRUE
   29            | BOOL VAR_NAME EQUAL FALSE

   30 BOOLEAN_OP: VAR_NAME COMPARE VAR_NAME
   31           | VAR_NAME MORE VAR_NAME
   32           | VAR_NAME LESS VAR_NAME
   33           | VAR_NAME GREATER_THAN VAR_NAME
   34           | VAR_NAME LESSER_THAN VAR_NAME
   35           | VAR_NAME NOT_EQUAL VAR_NAME
   36           | VAR_NAME COMPARE INT
   37           | VAR_NAME MORE INT
   38           | VAR_NAME LESS INT
   39           | VAR_NAME GREATER_THAN INT
   40           | VAR_NAME LESSER_THAN INT
   41           | VAR_NAME NOT_EQUAL INT
   42           | INT COMPARE VAR_NAME
   43           | INT MORE VAR_NAME
   44           | INT LESS VAR_NAME
   45           | INT GREATER_THAN VAR_NAME
   46           | INT LESSER_THAN VAR_NAME
   47           | INT NOT_EQUAL VAR_NAME
   48           | INT COMPARE INT
   49           | INT MORE INT
   50           | INT LESS INT
   51           | INT GREATER_THAN INT
   52           | INT LESSER_THAN INT
   53           | INT NOT_EQUAL INT

   54 BOOLEAN_MIX: BOOLEAN_OP AND BOOLEAN_OP
   55            | BOOLEAN_OP OR BOOLEAN_OP
   56            | RIGHT BOOLEAN_OP AND BOOLEAN_OP LEFT
   57            | RIGHT BOOLEAN_OP OR BOOLEAN_OP LEFT


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 21 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
FLOAT (259) 22
PLUS (260) 23
MINUS (261) 24
MULTIPLY (262) 25
DIVIDE (263) 26
LEFT (264) 27 56 57
RIGHT (265) 27 56 57
OPEN (266)
CLOSE (267)
WHILE (268)
BOOL (269) 28 29
FOR (270)
CASE (271)
INTEGERDEC (272) 10 14
FLOATDEC (273) 12 18
CHARDEC (274) 13 19
STRINGDEC (275) 11 16
STR (276) 16 17
VAR_NAME (277) 10 11 12 13 14 15 16 17 18 19 20 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47
CHAR (278) 19 20
AND (279) 54 56
OR (280) 55 57
LESS (281) 32 38 44 50
MORE (282) 31 37 43 49
EQUAL (283) 14 15 16 17 18 19 20 28 29
GREATER_THAN (284) 33 39 45 51
LESSER_THAN (285) 34 40 46 52
NOT_EQUAL (286) 35 41 47 53
COMPARE (287) 30 36 42 48
COMMENT (288)
COLON (289) 10 11 12 13 14 15 16 17 18 19 20
SEMICOLON (290) 10 11 12 13 14 15 16 17 18 19 20
QUOTE (291)
NEWLINE (292) 3 4 5 6 7 8 9
QUIT (293) 9
TRUE (294) 28
FALSE (295) 29


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
calculation (42)
    on left: 1 2, on right: 0 2
line (43)
    on left: 3 4 5 6 7 8 9, on right: 2
DECL (44)
    on left: 10 11 12 13 14 15 16 17 18 19 20, on right: 8
OPERATION (45)
    on left: 21 22 23 24 25 26 27, on right: 4 14 15 18 23 24 25 26
    27
BOOLEAN_VAR (46)
    on left: 28 29, on right: 5
BOOLEAN_OP (47)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53, on right: 6 54 55 56 57
BOOLEAN_MIX (48)
    on left: 54 55 56 57, on right: 7


state 0

    0 $accept: . calculation $end

    $default  reduce using rule 1 (calculation)

    calculation  go to state 1


state 1

    0 $accept: calculation . $end
    2 calculation: calculation . line

    $end      shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    LEFT      shift, and go to state 5
    RIGHT     shift, and go to state 6
    BOOL      shift, and go to state 7
    VAR_NAME  shift, and go to state 8
    NEWLINE   shift, and go to state 9
    QUIT      shift, and go to state 10

    line         go to state 11
    DECL         go to state 12
    OPERATION    go to state 13
    BOOLEAN_VAR  go to state 14
    BOOLEAN_OP   go to state 15
    BOOLEAN_MIX  go to state 16


state 2

    0 $accept: calculation $end .

    $default  accept


state 3

   21 OPERATION: INT .
   42 BOOLEAN_OP: INT . COMPARE VAR_NAME
   43           | INT . MORE VAR_NAME
   44           | INT . LESS VAR_NAME
   45           | INT . GREATER_THAN VAR_NAME
   46           | INT . LESSER_THAN VAR_NAME
   47           | INT . NOT_EQUAL VAR_NAME
   48           | INT . COMPARE INT
   49           | INT . MORE INT
   50           | INT . LESS INT
   51           | INT . GREATER_THAN INT
   52           | INT . LESSER_THAN INT
   53           | INT . NOT_EQUAL INT

    LESS          shift, and go to state 17
    MORE          shift, and go to state 18
    GREATER_THAN  shift, and go to state 19
    LESSER_THAN   shift, and go to state 20
    NOT_EQUAL     shift, and go to state 21
    COMPARE       shift, and go to state 22

    $default  reduce using rule 21 (OPERATION)


state 4

   22 OPERATION: FLOAT .

    $default  reduce using rule 22 (OPERATION)


state 5

   27 OPERATION: LEFT . OPERATION RIGHT

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 24


state 6

   56 BOOLEAN_MIX: RIGHT . BOOLEAN_OP AND BOOLEAN_OP LEFT
   57            | RIGHT . BOOLEAN_OP OR BOOLEAN_OP LEFT

    INT       shift, and go to state 25
    VAR_NAME  shift, and go to state 26

    BOOLEAN_OP  go to state 27


state 7

   28 BOOLEAN_VAR: BOOL . VAR_NAME EQUAL TRUE
   29            | BOOL . VAR_NAME EQUAL FALSE

    VAR_NAME  shift, and go to state 28


state 8

   10 DECL: VAR_NAME . COLON INTEGERDEC SEMICOLON
   11     | VAR_NAME . COLON STRINGDEC SEMICOLON
   12     | VAR_NAME . COLON FLOATDEC SEMICOLON
   13     | VAR_NAME . COLON CHARDEC SEMICOLON
   14     | VAR_NAME . COLON INTEGERDEC COLON EQUAL OPERATION SEMICOLON
   15     | VAR_NAME . COLON EQUAL OPERATION SEMICOLON
   16     | VAR_NAME . COLON STRINGDEC COLON EQUAL STR SEMICOLON
   17     | VAR_NAME . COLON EQUAL STR SEMICOLON
   18     | VAR_NAME . COLON FLOATDEC COLON EQUAL OPERATION SEMICOLON
   19     | VAR_NAME . COLON CHARDEC COLON EQUAL CHAR SEMICOLON
   20     | VAR_NAME . COLON EQUAL CHAR SEMICOLON
   30 BOOLEAN_OP: VAR_NAME . COMPARE VAR_NAME
   31           | VAR_NAME . MORE VAR_NAME
   32           | VAR_NAME . LESS VAR_NAME
   33           | VAR_NAME . GREATER_THAN VAR_NAME
   34           | VAR_NAME . LESSER_THAN VAR_NAME
   35           | VAR_NAME . NOT_EQUAL VAR_NAME
   36           | VAR_NAME . COMPARE INT
   37           | VAR_NAME . MORE INT
   38           | VAR_NAME . LESS INT
   39           | VAR_NAME . GREATER_THAN INT
   40           | VAR_NAME . LESSER_THAN INT
   41           | VAR_NAME . NOT_EQUAL INT

    LESS          shift, and go to state 29
    MORE          shift, and go to state 30
    GREATER_THAN  shift, and go to state 31
    LESSER_THAN   shift, and go to state 32
    NOT_EQUAL     shift, and go to state 33
    COMPARE       shift, and go to state 34
    COLON         shift, and go to state 35


state 9

    3 line: NEWLINE .

    $default  reduce using rule 3 (line)


state 10

    9 line: QUIT . NEWLINE

    NEWLINE  shift, and go to state 36


state 11

    2 calculation: calculation line .

    $default  reduce using rule 2 (calculation)


state 12

    8 line: DECL . NEWLINE

    NEWLINE  shift, and go to state 37


state 13

    4 line: OPERATION . NEWLINE
   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    PLUS      shift, and go to state 38
    MINUS     shift, and go to state 39
    MULTIPLY  shift, and go to state 40
    DIVIDE    shift, and go to state 41
    NEWLINE   shift, and go to state 42


state 14

    5 line: BOOLEAN_VAR . NEWLINE

    NEWLINE  shift, and go to state 43


state 15

    6 line: BOOLEAN_OP . NEWLINE
   54 BOOLEAN_MIX: BOOLEAN_OP . AND BOOLEAN_OP
   55            | BOOLEAN_OP . OR BOOLEAN_OP

    AND      shift, and go to state 44
    OR       shift, and go to state 45
    NEWLINE  shift, and go to state 46


state 16

    7 line: BOOLEAN_MIX . NEWLINE

    NEWLINE  shift, and go to state 47


state 17

   44 BOOLEAN_OP: INT LESS . VAR_NAME
   50           | INT LESS . INT

    INT       shift, and go to state 48
    VAR_NAME  shift, and go to state 49


state 18

   43 BOOLEAN_OP: INT MORE . VAR_NAME
   49           | INT MORE . INT

    INT       shift, and go to state 50
    VAR_NAME  shift, and go to state 51


state 19

   45 BOOLEAN_OP: INT GREATER_THAN . VAR_NAME
   51           | INT GREATER_THAN . INT

    INT       shift, and go to state 52
    VAR_NAME  shift, and go to state 53


state 20

   46 BOOLEAN_OP: INT LESSER_THAN . VAR_NAME
   52           | INT LESSER_THAN . INT

    INT       shift, and go to state 54
    VAR_NAME  shift, and go to state 55


state 21

   47 BOOLEAN_OP: INT NOT_EQUAL . VAR_NAME
   53           | INT NOT_EQUAL . INT

    INT       shift, and go to state 56
    VAR_NAME  shift, and go to state 57


state 22

   42 BOOLEAN_OP: INT COMPARE . VAR_NAME
   48           | INT COMPARE . INT

    INT       shift, and go to state 58
    VAR_NAME  shift, and go to state 59


state 23

   21 OPERATION: INT .

    $default  reduce using rule 21 (OPERATION)


state 24

   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION
   27          | LEFT OPERATION . RIGHT

    PLUS      shift, and go to state 38
    MINUS     shift, and go to state 39
    MULTIPLY  shift, and go to state 40
    DIVIDE    shift, and go to state 41
    RIGHT     shift, and go to state 60


state 25

   42 BOOLEAN_OP: INT . COMPARE VAR_NAME
   43           | INT . MORE VAR_NAME
   44           | INT . LESS VAR_NAME
   45           | INT . GREATER_THAN VAR_NAME
   46           | INT . LESSER_THAN VAR_NAME
   47           | INT . NOT_EQUAL VAR_NAME
   48           | INT . COMPARE INT
   49           | INT . MORE INT
   50           | INT . LESS INT
   51           | INT . GREATER_THAN INT
   52           | INT . LESSER_THAN INT
   53           | INT . NOT_EQUAL INT

    LESS          shift, and go to state 17
    MORE          shift, and go to state 18
    GREATER_THAN  shift, and go to state 19
    LESSER_THAN   shift, and go to state 20
    NOT_EQUAL     shift, and go to state 21
    COMPARE       shift, and go to state 22


state 26

   30 BOOLEAN_OP: VAR_NAME . COMPARE VAR_NAME
   31           | VAR_NAME . MORE VAR_NAME
   32           | VAR_NAME . LESS VAR_NAME
   33           | VAR_NAME . GREATER_THAN VAR_NAME
   34           | VAR_NAME . LESSER_THAN VAR_NAME
   35           | VAR_NAME . NOT_EQUAL VAR_NAME
   36           | VAR_NAME . COMPARE INT
   37           | VAR_NAME . MORE INT
   38           | VAR_NAME . LESS INT
   39           | VAR_NAME . GREATER_THAN INT
   40           | VAR_NAME . LESSER_THAN INT
   41           | VAR_NAME . NOT_EQUAL INT

    LESS          shift, and go to state 29
    MORE          shift, and go to state 30
    GREATER_THAN  shift, and go to state 31
    LESSER_THAN   shift, and go to state 32
    NOT_EQUAL     shift, and go to state 33
    COMPARE       shift, and go to state 34


state 27

   56 BOOLEAN_MIX: RIGHT BOOLEAN_OP . AND BOOLEAN_OP LEFT
   57            | RIGHT BOOLEAN_OP . OR BOOLEAN_OP LEFT

    AND  shift, and go to state 61
    OR   shift, and go to state 62


state 28

   28 BOOLEAN_VAR: BOOL VAR_NAME . EQUAL TRUE
   29            | BOOL VAR_NAME . EQUAL FALSE

    EQUAL  shift, and go to state 63


state 29

   32 BOOLEAN_OP: VAR_NAME LESS . VAR_NAME
   38           | VAR_NAME LESS . INT

    INT       shift, and go to state 64
    VAR_NAME  shift, and go to state 65


state 30

   31 BOOLEAN_OP: VAR_NAME MORE . VAR_NAME
   37           | VAR_NAME MORE . INT

    INT       shift, and go to state 66
    VAR_NAME  shift, and go to state 67


state 31

   33 BOOLEAN_OP: VAR_NAME GREATER_THAN . VAR_NAME
   39           | VAR_NAME GREATER_THAN . INT

    INT       shift, and go to state 68
    VAR_NAME  shift, and go to state 69


state 32

   34 BOOLEAN_OP: VAR_NAME LESSER_THAN . VAR_NAME
   40           | VAR_NAME LESSER_THAN . INT

    INT       shift, and go to state 70
    VAR_NAME  shift, and go to state 71


state 33

   35 BOOLEAN_OP: VAR_NAME NOT_EQUAL . VAR_NAME
   41           | VAR_NAME NOT_EQUAL . INT

    INT       shift, and go to state 72
    VAR_NAME  shift, and go to state 73


state 34

   30 BOOLEAN_OP: VAR_NAME COMPARE . VAR_NAME
   36           | VAR_NAME COMPARE . INT

    INT       shift, and go to state 74
    VAR_NAME  shift, and go to state 75


state 35

   10 DECL: VAR_NAME COLON . INTEGERDEC SEMICOLON
   11     | VAR_NAME COLON . STRINGDEC SEMICOLON
   12     | VAR_NAME COLON . FLOATDEC SEMICOLON
   13     | VAR_NAME COLON . CHARDEC SEMICOLON
   14     | VAR_NAME COLON . INTEGERDEC COLON EQUAL OPERATION SEMICOLON
   15     | VAR_NAME COLON . EQUAL OPERATION SEMICOLON
   16     | VAR_NAME COLON . STRINGDEC COLON EQUAL STR SEMICOLON
   17     | VAR_NAME COLON . EQUAL STR SEMICOLON
   18     | VAR_NAME COLON . FLOATDEC COLON EQUAL OPERATION SEMICOLON
   19     | VAR_NAME COLON . CHARDEC COLON EQUAL CHAR SEMICOLON
   20     | VAR_NAME COLON . EQUAL CHAR SEMICOLON

    INTEGERDEC  shift, and go to state 76
    FLOATDEC    shift, and go to state 77
    CHARDEC     shift, and go to state 78
    STRINGDEC   shift, and go to state 79
    EQUAL       shift, and go to state 80


state 36

    9 line: QUIT NEWLINE .

    $default  reduce using rule 9 (line)


state 37

    8 line: DECL NEWLINE .

    $default  reduce using rule 8 (line)


state 38

   23 OPERATION: OPERATION PLUS . OPERATION

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 81


state 39

   24 OPERATION: OPERATION MINUS . OPERATION

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 82


state 40

   25 OPERATION: OPERATION MULTIPLY . OPERATION

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 83


state 41

   26 OPERATION: OPERATION DIVIDE . OPERATION

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 84


state 42

    4 line: OPERATION NEWLINE .

    $default  reduce using rule 4 (line)


state 43

    5 line: BOOLEAN_VAR NEWLINE .

    $default  reduce using rule 5 (line)


state 44

   54 BOOLEAN_MIX: BOOLEAN_OP AND . BOOLEAN_OP

    INT       shift, and go to state 25
    VAR_NAME  shift, and go to state 26

    BOOLEAN_OP  go to state 85


state 45

   55 BOOLEAN_MIX: BOOLEAN_OP OR . BOOLEAN_OP

    INT       shift, and go to state 25
    VAR_NAME  shift, and go to state 26

    BOOLEAN_OP  go to state 86


state 46

    6 line: BOOLEAN_OP NEWLINE .

    $default  reduce using rule 6 (line)


state 47

    7 line: BOOLEAN_MIX NEWLINE .

    $default  reduce using rule 7 (line)


state 48

   50 BOOLEAN_OP: INT LESS INT .

    $default  reduce using rule 50 (BOOLEAN_OP)


state 49

   44 BOOLEAN_OP: INT LESS VAR_NAME .

    $default  reduce using rule 44 (BOOLEAN_OP)


state 50

   49 BOOLEAN_OP: INT MORE INT .

    $default  reduce using rule 49 (BOOLEAN_OP)


state 51

   43 BOOLEAN_OP: INT MORE VAR_NAME .

    $default  reduce using rule 43 (BOOLEAN_OP)


state 52

   51 BOOLEAN_OP: INT GREATER_THAN INT .

    $default  reduce using rule 51 (BOOLEAN_OP)


state 53

   45 BOOLEAN_OP: INT GREATER_THAN VAR_NAME .

    $default  reduce using rule 45 (BOOLEAN_OP)


state 54

   52 BOOLEAN_OP: INT LESSER_THAN INT .

    $default  reduce using rule 52 (BOOLEAN_OP)


state 55

   46 BOOLEAN_OP: INT LESSER_THAN VAR_NAME .

    $default  reduce using rule 46 (BOOLEAN_OP)


state 56

   53 BOOLEAN_OP: INT NOT_EQUAL INT .

    $default  reduce using rule 53 (BOOLEAN_OP)


state 57

   47 BOOLEAN_OP: INT NOT_EQUAL VAR_NAME .

    $default  reduce using rule 47 (BOOLEAN_OP)


state 58

   48 BOOLEAN_OP: INT COMPARE INT .

    $default  reduce using rule 48 (BOOLEAN_OP)


state 59

   42 BOOLEAN_OP: INT COMPARE VAR_NAME .

    $default  reduce using rule 42 (BOOLEAN_OP)


state 60

   27 OPERATION: LEFT OPERATION RIGHT .

    $default  reduce using rule 27 (OPERATION)


state 61

   56 BOOLEAN_MIX: RIGHT BOOLEAN_OP AND . BOOLEAN_OP LEFT

    INT       shift, and go to state 25
    VAR_NAME  shift, and go to state 26

    BOOLEAN_OP  go to state 87


state 62

   57 BOOLEAN_MIX: RIGHT BOOLEAN_OP OR . BOOLEAN_OP LEFT

    INT       shift, and go to state 25
    VAR_NAME  shift, and go to state 26

    BOOLEAN_OP  go to state 88


state 63

   28 BOOLEAN_VAR: BOOL VAR_NAME EQUAL . TRUE
   29            | BOOL VAR_NAME EQUAL . FALSE

    TRUE   shift, and go to state 89
    FALSE  shift, and go to state 90


state 64

   38 BOOLEAN_OP: VAR_NAME LESS INT .

    $default  reduce using rule 38 (BOOLEAN_OP)


state 65

   32 BOOLEAN_OP: VAR_NAME LESS VAR_NAME .

    $default  reduce using rule 32 (BOOLEAN_OP)


state 66

   37 BOOLEAN_OP: VAR_NAME MORE INT .

    $default  reduce using rule 37 (BOOLEAN_OP)


state 67

   31 BOOLEAN_OP: VAR_NAME MORE VAR_NAME .

    $default  reduce using rule 31 (BOOLEAN_OP)


state 68

   39 BOOLEAN_OP: VAR_NAME GREATER_THAN INT .

    $default  reduce using rule 39 (BOOLEAN_OP)


state 69

   33 BOOLEAN_OP: VAR_NAME GREATER_THAN VAR_NAME .

    $default  reduce using rule 33 (BOOLEAN_OP)


state 70

   40 BOOLEAN_OP: VAR_NAME LESSER_THAN INT .

    $default  reduce using rule 40 (BOOLEAN_OP)


state 71

   34 BOOLEAN_OP: VAR_NAME LESSER_THAN VAR_NAME .

    $default  reduce using rule 34 (BOOLEAN_OP)


state 72

   41 BOOLEAN_OP: VAR_NAME NOT_EQUAL INT .

    $default  reduce using rule 41 (BOOLEAN_OP)


state 73

   35 BOOLEAN_OP: VAR_NAME NOT_EQUAL VAR_NAME .

    $default  reduce using rule 35 (BOOLEAN_OP)


state 74

   36 BOOLEAN_OP: VAR_NAME COMPARE INT .

    $default  reduce using rule 36 (BOOLEAN_OP)


state 75

   30 BOOLEAN_OP: VAR_NAME COMPARE VAR_NAME .

    $default  reduce using rule 30 (BOOLEAN_OP)


state 76

   10 DECL: VAR_NAME COLON INTEGERDEC . SEMICOLON
   14     | VAR_NAME COLON INTEGERDEC . COLON EQUAL OPERATION SEMICOLON

    COLON      shift, and go to state 91
    SEMICOLON  shift, and go to state 92


state 77

   12 DECL: VAR_NAME COLON FLOATDEC . SEMICOLON
   18     | VAR_NAME COLON FLOATDEC . COLON EQUAL OPERATION SEMICOLON

    COLON      shift, and go to state 93
    SEMICOLON  shift, and go to state 94


state 78

   13 DECL: VAR_NAME COLON CHARDEC . SEMICOLON
   19     | VAR_NAME COLON CHARDEC . COLON EQUAL CHAR SEMICOLON

    COLON      shift, and go to state 95
    SEMICOLON  shift, and go to state 96


state 79

   11 DECL: VAR_NAME COLON STRINGDEC . SEMICOLON
   16     | VAR_NAME COLON STRINGDEC . COLON EQUAL STR SEMICOLON

    COLON      shift, and go to state 97
    SEMICOLON  shift, and go to state 98


state 80

   15 DECL: VAR_NAME COLON EQUAL . OPERATION SEMICOLON
   17     | VAR_NAME COLON EQUAL . STR SEMICOLON
   20     | VAR_NAME COLON EQUAL . CHAR SEMICOLON

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5
    STR    shift, and go to state 99
    CHAR   shift, and go to state 100

    OPERATION  go to state 101


state 81

   23 OPERATION: OPERATION . PLUS OPERATION
   23          | OPERATION PLUS OPERATION .
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    MULTIPLY  shift, and go to state 40
    DIVIDE    shift, and go to state 41

    $default  reduce using rule 23 (OPERATION)


state 82

   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   24          | OPERATION MINUS OPERATION .
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    MULTIPLY  shift, and go to state 40
    DIVIDE    shift, and go to state 41

    $default  reduce using rule 24 (OPERATION)


state 83

   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   25          | OPERATION MULTIPLY OPERATION .
   26          | OPERATION . DIVIDE OPERATION

    $default  reduce using rule 25 (OPERATION)


state 84

   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION
   26          | OPERATION DIVIDE OPERATION .

    $default  reduce using rule 26 (OPERATION)


state 85

   54 BOOLEAN_MIX: BOOLEAN_OP AND BOOLEAN_OP .

    $default  reduce using rule 54 (BOOLEAN_MIX)


state 86

   55 BOOLEAN_MIX: BOOLEAN_OP OR BOOLEAN_OP .

    $default  reduce using rule 55 (BOOLEAN_MIX)


state 87

   56 BOOLEAN_MIX: RIGHT BOOLEAN_OP AND BOOLEAN_OP . LEFT

    LEFT  shift, and go to state 102


state 88

   57 BOOLEAN_MIX: RIGHT BOOLEAN_OP OR BOOLEAN_OP . LEFT

    LEFT  shift, and go to state 103


state 89

   28 BOOLEAN_VAR: BOOL VAR_NAME EQUAL TRUE .

    $default  reduce using rule 28 (BOOLEAN_VAR)


state 90

   29 BOOLEAN_VAR: BOOL VAR_NAME EQUAL FALSE .

    $default  reduce using rule 29 (BOOLEAN_VAR)


state 91

   14 DECL: VAR_NAME COLON INTEGERDEC COLON . EQUAL OPERATION SEMICOLON

    EQUAL  shift, and go to state 104


state 92

   10 DECL: VAR_NAME COLON INTEGERDEC SEMICOLON .

    $default  reduce using rule 10 (DECL)


state 93

   18 DECL: VAR_NAME COLON FLOATDEC COLON . EQUAL OPERATION SEMICOLON

    EQUAL  shift, and go to state 105


state 94

   12 DECL: VAR_NAME COLON FLOATDEC SEMICOLON .

    $default  reduce using rule 12 (DECL)


state 95

   19 DECL: VAR_NAME COLON CHARDEC COLON . EQUAL CHAR SEMICOLON

    EQUAL  shift, and go to state 106


state 96

   13 DECL: VAR_NAME COLON CHARDEC SEMICOLON .

    $default  reduce using rule 13 (DECL)


state 97

   16 DECL: VAR_NAME COLON STRINGDEC COLON . EQUAL STR SEMICOLON

    EQUAL  shift, and go to state 107


state 98

   11 DECL: VAR_NAME COLON STRINGDEC SEMICOLON .

    $default  reduce using rule 11 (DECL)


state 99

   17 DECL: VAR_NAME COLON EQUAL STR . SEMICOLON

    SEMICOLON  shift, and go to state 108


state 100

   20 DECL: VAR_NAME COLON EQUAL CHAR . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 101

   15 DECL: VAR_NAME COLON EQUAL OPERATION . SEMICOLON
   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    MULTIPLY   shift, and go to state 40
    DIVIDE     shift, and go to state 41
    SEMICOLON  shift, and go to state 110


state 102

   56 BOOLEAN_MIX: RIGHT BOOLEAN_OP AND BOOLEAN_OP LEFT .

    $default  reduce using rule 56 (BOOLEAN_MIX)


state 103

   57 BOOLEAN_MIX: RIGHT BOOLEAN_OP OR BOOLEAN_OP LEFT .

    $default  reduce using rule 57 (BOOLEAN_MIX)


state 104

   14 DECL: VAR_NAME COLON INTEGERDEC COLON EQUAL . OPERATION SEMICOLON

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 111


state 105

   18 DECL: VAR_NAME COLON FLOATDEC COLON EQUAL . OPERATION SEMICOLON

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 4
    LEFT   shift, and go to state 5

    OPERATION  go to state 112


state 106

   19 DECL: VAR_NAME COLON CHARDEC COLON EQUAL . CHAR SEMICOLON

    CHAR  shift, and go to state 113


state 107

   16 DECL: VAR_NAME COLON STRINGDEC COLON EQUAL . STR SEMICOLON

    STR  shift, and go to state 114


state 108

   17 DECL: VAR_NAME COLON EQUAL STR SEMICOLON .

    $default  reduce using rule 17 (DECL)


state 109

   20 DECL: VAR_NAME COLON EQUAL CHAR SEMICOLON .

    $default  reduce using rule 20 (DECL)


state 110

   15 DECL: VAR_NAME COLON EQUAL OPERATION SEMICOLON .

    $default  reduce using rule 15 (DECL)


state 111

   14 DECL: VAR_NAME COLON INTEGERDEC COLON EQUAL OPERATION . SEMICOLON
   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    MULTIPLY   shift, and go to state 40
    DIVIDE     shift, and go to state 41
    SEMICOLON  shift, and go to state 115


state 112

   18 DECL: VAR_NAME COLON FLOATDEC COLON EQUAL OPERATION . SEMICOLON
   23 OPERATION: OPERATION . PLUS OPERATION
   24          | OPERATION . MINUS OPERATION
   25          | OPERATION . MULTIPLY OPERATION
   26          | OPERATION . DIVIDE OPERATION

    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    MULTIPLY   shift, and go to state 40
    DIVIDE     shift, and go to state 41
    SEMICOLON  shift, and go to state 116


state 113

   19 DECL: VAR_NAME COLON CHARDEC COLON EQUAL CHAR . SEMICOLON

    SEMICOLON  shift, and go to state 117


state 114

   16 DECL: VAR_NAME COLON STRINGDEC COLON EQUAL STR . SEMICOLON

    SEMICOLON  shift, and go to state 118


state 115

   14 DECL: VAR_NAME COLON INTEGERDEC COLON EQUAL OPERATION SEMICOLON .

    $default  reduce using rule 14 (DECL)


state 116

   18 DECL: VAR_NAME COLON FLOATDEC COLON EQUAL OPERATION SEMICOLON .

    $default  reduce using rule 18 (DECL)


state 117

   19 DECL: VAR_NAME COLON CHARDEC COLON EQUAL CHAR SEMICOLON .

    $default  reduce using rule 19 (DECL)


state 118

   16 DECL: VAR_NAME COLON STRINGDEC COLON EQUAL STR SEMICOLON .

    $default  reduce using rule 16 (DECL)
